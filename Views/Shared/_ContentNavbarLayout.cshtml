@await Html.PartialAsync("Sections/_Variables")
@{
    TempData.Keep();
    Layout = "_CommonMasterLayout";
    ViewData["contentNavbar"] = true;

    ViewData["isNavbar"] = (ViewData["isNavbar"] ??= true);
    ViewData["isMenu"] = (ViewData["isMenu"] ??= true);
    ViewData["isFlex"] = (ViewData["isFlex"] ??= false);
    ViewData["isFooter"] = (ViewData["isFooter"] ??= true);

    ViewData["container"] = (ViewData["container"] ?? "container-xxl");
    ViewData["containerNav"] = (ViewData["containerNav"] ?? "container-xxl");
}

@{
    bool isMenu = ViewData["isMenu"] != null && Convert.ToBoolean(ViewData["isMenu"]);
}

@section VendorStyles{ @RenderSection("VendorStyles", required: false) }

@section PageStyles{ @RenderSection("PageStyles", required: false) }

@section VendorScripts{ @RenderSection("VendorScripts", required: false) }

@section PageScripts{ @RenderSection("PageScripts", required: false) }

<div class='layout-wrapper layout-content-navbar @(isMenu ? "" : "layout-without-menu")'>
    <div class="layout-container">
        @if (isMenu)
        {
            @await Html.PartialAsync("Sections/Menu/_VerticalMenu")
        }
        <div class="layout-page">
            <div class="content-wrapper">
                <div class='@ViewData["container"] @(Convert.ToBoolean(@ViewData["isFlex"]) ? "d-flex align-items-stretch flex-grow-1 p-0" : "flex-grow-1 container-p-y")'>
                    @RenderBody()
                </div>
            </div>
        </div>
    </div>
</div>